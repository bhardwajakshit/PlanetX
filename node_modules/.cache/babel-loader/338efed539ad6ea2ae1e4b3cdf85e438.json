{"ast":null,"code":"var _jsxFileName = \"/home/akshit/PlanetX/planetx/src/components/Map.js\",\n    _s = $RefreshSig$();\n\n// yes\nimport { useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport LocationMarker from './LocationMarker';\nimport LocationInfoBox from './LocationInfoBox'; // Loop through the location marker and retrieve the data for each event we want to highlight\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = _ref => {\n  _s();\n\n  let {\n    eventData,\n    center,\n    zoom\n  } = _ref;\n  const [locationInfo, setLocationInfo] = useState(null);\n  const markers = eventData.map(ev => {\n    if (ev.categories[0].id === 8) {\n      return /*#__PURE__*/_jsxDEV(LocationMarker, {\n        lat: ev.geometries[0].coordinates[1],\n        lng: ev.geometries[0].coordinates[0],\n        onClick: () => setLocationInfo({\n          id: ev.id,\n          title: ev.title\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map\",\n    children: [/*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: 'AIzaSyAE7idgWTmvdPfyNdSz16e9ln4mzffbKmU'\n      },\n      defaultCenter: center,\n      defaultZoom: zoom,\n      children: markers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), locationInfo && /*#__PURE__*/_jsxDEV(LocationInfoBox, {\n      info: locationInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}; // This location can be edited, it is just a spot in California near common Wildfire zones\n\n\n_s(Map, \"12TQ7nOZavxYGEoGTr51i7Gzxxc=\");\n\n_c = Map;\nMap.defaultProps = {\n  center: {\n    lat: 39.8283,\n    lng: -98.5795\n  },\n  zoom: 4\n};\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["useState","GoogleMapReact","LocationMarker","LocationInfoBox","Map","eventData","center","zoom","locationInfo","setLocationInfo","markers","map","ev","categories","id","geometries","coordinates","title","key","defaultProps","lat","lng"],"sources":["/home/akshit/PlanetX/planetx/src/components/Map.js"],"sourcesContent":["// yes\n\nimport { useState } from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport LocationMarker from './LocationMarker'\nimport LocationInfoBox from './LocationInfoBox'\n\n// Loop through the location marker and retrieve the data for each event we want to highlight\nconst Map = ({ eventData, center, zoom }) => {\n    const [locationInfo, setLocationInfo] = useState(null)\n\n\n\n    const markers = eventData.map(ev => {\n        if(ev.categories[0].id === 8) {\n            return  <LocationMarker lat={ev.geometries[0].coordinates[1]}  lng={ev.geometries[0].coordinates[0]} \n            onClick={() => setLocationInfo ({ id: ev.id, title: ev.title })} />\n        }\n    })\n\n\n    return (\n        <div className=\"map\">\n            <GoogleMapReact\n            bootstrapURLKeys= {{ key: 'AIzaSyAE7idgWTmvdPfyNdSz16e9ln4mzffbKmU'}}\n            defaultCenter={ center }\n            defaultZoom={ zoom }\n            >\n               {markers}\n                </GoogleMapReact>\n                {locationInfo && <LocationInfoBox info={locationInfo} />}\n        </div>\n    )\n}\n\n// This location can be edited, it is just a spot in California near common Wildfire zones\nMap.defaultProps = {\n    center: {\n        lat: 39.8283, \n        lng: -98.5795\n    },\n    zoom: 4\n}\n\nexport default Map\n"],"mappings":";;;AAAA;AAEA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C,CAEA;;;;AACA,MAAMC,GAAG,GAAG,QAAiC;EAAA;;EAAA,IAAhC;IAAEC,SAAF;IAAaC,MAAb;IAAqBC;EAArB,CAAgC;EACzC,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,IAAD,CAAhD;EAIA,MAAMU,OAAO,GAAGL,SAAS,CAACM,GAAV,CAAcC,EAAE,IAAI;IAChC,IAAGA,EAAE,CAACC,UAAH,CAAc,CAAd,EAAiBC,EAAjB,KAAwB,CAA3B,EAA8B;MAC1B,oBAAQ,QAAC,cAAD;QAAgB,GAAG,EAAEF,EAAE,CAACG,UAAH,CAAc,CAAd,EAAiBC,WAAjB,CAA6B,CAA7B,CAArB;QAAuD,GAAG,EAAEJ,EAAE,CAACG,UAAH,CAAc,CAAd,EAAiBC,WAAjB,CAA6B,CAA7B,CAA5D;QACR,OAAO,EAAE,MAAMP,eAAe,CAAE;UAAEK,EAAE,EAAEF,EAAE,CAACE,EAAT;UAAaG,KAAK,EAAEL,EAAE,CAACK;QAAvB,CAAF;MADtB;QAAA;QAAA;QAAA;MAAA,QAAR;IAEH;EACJ,CALe,CAAhB;EAQA,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,wBACI,QAAC,cAAD;MACA,gBAAgB,EAAG;QAAEC,GAAG,EAAE;MAAP,CADnB;MAEA,aAAa,EAAGZ,MAFhB;MAGA,WAAW,EAAGC,IAHd;MAAA,UAKIG;IALJ;MAAA;MAAA;MAAA;IAAA,QADJ,EAQSF,YAAY,iBAAI,QAAC,eAAD;MAAiB,IAAI,EAAEA;IAAvB;MAAA;MAAA;MAAA;IAAA,QARzB;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAYH,CAzBD,C,CA2BA;;;GA3BMJ,G;;KAAAA,G;AA4BNA,GAAG,CAACe,YAAJ,GAAmB;EACfb,MAAM,EAAE;IACJc,GAAG,EAAE,OADD;IAEJC,GAAG,EAAE,CAAC;EAFF,CADO;EAKfd,IAAI,EAAE;AALS,CAAnB;AAQA,eAAeH,GAAf"},"metadata":{},"sourceType":"module"}