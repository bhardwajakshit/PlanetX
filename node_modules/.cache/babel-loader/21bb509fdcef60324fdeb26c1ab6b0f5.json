{"ast":null,"code":"var _jsxFileName = \"/home/akshit/PlanetX/planetx/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Map from './components/Map';\nimport Loader from './components/Loader';\nimport Header from './components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [eventData, setEventData] = useState([]);\n  const [loading, setLoading] = useState(false); // Use Async await here with fetch for the NASA API\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      setLoading(true);\n      const res = await fetch('https://eonet.sci.gsfc.nasa.gov/api/v2.1/events'); // Destructure here to just pull targeted information we need, in this case, just events\n\n      const {\n        events\n      } = await res.json();\n      setEventData(events);\n      setLoading(false);\n    };\n\n    fetchEvents(); // Add dependency array as 2nd argument below, it will be set as empty\n\n    console.log(eventData);\n  }, []); // Create a loading expression\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), !loading ? /*#__PURE__*/_jsxDEV(Map, {\n      eventData: eventData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 52\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"U8rW6Qt8WbkVNNz2MQKPlyaASlw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Map","Loader","Header","App","eventData","setEventData","loading","setLoading","fetchEvents","res","fetch","events","json","console","log"],"sources":["/home/akshit/PlanetX/planetx/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nimport Map from './components/Map'\nimport Loader from './components/Loader'\nimport Header from './components/Header'\n\nfunction App() {\n  const [eventData, setEventData] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  // Use Async await here with fetch for the NASA API\n  useEffect(() => {\n    const fetchEvents = async () => {\n      setLoading(true)\n      const res = await fetch('https://eonet.sci.gsfc.nasa.gov/api/v2.1/events')\n      // Destructure here to just pull targeted information we need, in this case, just events\n      const { events } = await res.json()\n\n      setEventData(events)\n      setLoading(false)\n\n    }\n\n    fetchEvents()\n    // Add dependency array as 2nd argument below, it will be set as empty\n\n    console.log(eventData);\n  }, [])\n\n// Create a loading expression\n  return (\n    <div>\n      <Header />\n      { !loading ? <Map eventData={eventData} /> : <Loader /> }\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC,CAFa,CAIb;;EACAC,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAG,YAAY;MAC9BD,UAAU,CAAC,IAAD,CAAV;MACA,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,iDAAD,CAAvB,CAF8B,CAG9B;;MACA,MAAM;QAAEC;MAAF,IAAa,MAAMF,GAAG,CAACG,IAAJ,EAAzB;MAEAP,YAAY,CAACM,MAAD,CAAZ;MACAJ,UAAU,CAAC,KAAD,CAAV;IAED,CATD;;IAWAC,WAAW,GAZG,CAad;;IAEAK,OAAO,CAACC,GAAR,CAAYV,SAAZ;EACD,CAhBQ,EAgBN,EAhBM,CAAT,CALa,CAuBf;;EACE,oBACE;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,EAEI,CAACE,OAAD,gBAAW,QAAC,GAAD;MAAK,SAAS,EAAEF;IAAhB;MAAA;MAAA;MAAA;IAAA,QAAX,gBAA2C,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAF/C;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GA9BQD,G;;KAAAA,G;AAgCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}